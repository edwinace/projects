<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">

	<display-name>Struts2Shop</display-name>

<!-- ============================= Filters ================================= -->

	<filter>
		<filter-name>UrlRewriteFilter</filter-name>
		<filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>

		<!-- set the amount of seconds the conf file will be checked for reload
		can be a valid integer (0 denotes check every time,
		-1 denotes no reload check, default -1) -->
		<init-param>
			<param-name>confReloadCheckInterval</param-name>
			<!-- TODO: DEVELOPMENT -->
			<param-value>0</param-value>
			<!-- TODO: PRODUCTION -->
			<!--
			<param-value>-1</param-value>
			-->
		</init-param>

		<!-- if you need to the conf file path can be changed
		it is specified as a path relative to the root of your context
		(default /WEB-INF/urlrewrite.xml) -->
		<!--
		<init-param>
			<param-name>confPath</param-name>
			<param-value>/WEB-INF/my-urlrewrite.xml</param-value>
		</init-param>
		-->

		<!-- sets up log level (will be logged to context log)
		can be: TRACE, DEBUG, INFO (default), WARN, ERROR, FATAL, log4j, commons,
		sysout:{level} (ie, sysout:DEBUG)
		if you are having trouble using normal levels use sysout:DEBUG
		(default WARN) -->
		<init-param>
			<param-name>logLevel</param-name>
			<param-value>log4j</param-value>
		</init-param>

		<!-- you can change status path so that it does not
		conflict with your installed apps (note, defaults
		to /rewrite-status) note, must start with / -->
		<!--
		<init-param>
			<param-name>statusPath</param-name>
			<param-value>/status</param-value>
		</init-param>
		-->

		<!-- you can disable status page if desired
		can be: true, false (default true) -->
		<init-param>
			<param-name>statusEnabled</param-name>
			<!-- TODO: DEVELOPMENT -->
			<param-value>true</param-value>
			<!-- TODO: PRODUCTION -->
			<!--
			<param-value>false</param-value>
			-->
		</init-param>

		<!-- you may want to allow more hosts to look at the status page
		statusEnabledOnHosts is a comma delimited list of hosts, * can
		be used as a wildcard (defaults to "localhost, local, 127.0.0.1") -->
		<!-- TODO: PRODUCTION -->
		<!--
		<init-param>
			<param-name>statusEnabledOnHosts</param-name>
			<param-value>localhost, dev.*.site.com, *.some.site.com</param-value>
		</init-param>
		-->
	</filter>
	<filter>
		<filter-name>StrutsPrepareFilter</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareFilter</filter-class>
	</filter>
	<filter>
		<filter-name>SiteMeshFilter</filter-name>
		<filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>
	</filter>
	<filter>
		<filter-name>StrutsExecuteFilter</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter</filter-class>
	</filter>
	
	<!--
		Use this filter to encode requests because current browsers typically 
		do not set a character encoding even if specified in the HTML page or form.
		But URL parameters must be decoded explicitly (see ).
	-->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

<!-- ========================= Filter mappings ============================= -->

	<!-- 
		TODO: Filter by certain URL patterns like "*.action", "/struts/*", 
		"/shops/*", "*.jspa" etc. to remove unneeded overwork from filters.
	-->
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	<filter-mapping>
		<filter-name>UrlRewriteFilter</filter-name>
		<url-pattern>/s/*</url-pattern>
		<url-pattern>/p/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	<filter-mapping>
		<filter-name>StrutsPrepareFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SiteMeshFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	<filter-mapping>
		<filter-name>StrutsExecuteFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>

<!-- ============================ Listeners ================================ -->

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	
	<!-- Bootstrap listener for this webapp. -->
	<listener>
		<listener-class>seamshop.web.listener.BootstrapListener</listener-class>
	</listener>

<!-- ======================================================================= -->
	
	<jsp-config>
		<taglib>
			<taglib-uri>/custom-tags</taglib-uri>
			<taglib-location>/WEB-INF/tld/custom-tags.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>http://java.sun.com/jsp/jstl/core</taglib-uri>
			<taglib-location>/WEB-INF/tld/c.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>http://java.sun.com/jsp/jstl/functions</taglib-uri>
			<taglib-location>/WEB-INF/tld/fn.tld</taglib-location>
		</taglib>
		<jsp-property-group>
			<url-pattern>*.jsp</url-pattern>
			<page-encoding>UTF-8</page-encoding>
			<trim-directive-whitespaces>true</trim-directive-whitespaces>
		</jsp-property-group>
	</jsp-config>
	
	<!-- 
		Any welcome page needs to be excluded from SiteMesh decorators. 
		See [./decorators.xml] 
	-->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

<!--============================================================================
		Custom error pages.
=============================================================================-->
	
	<!--
		Error page can be specified for any HTTP status code.
		Some status codes:
		
		401 Unauthorized.
		404 Not Found.
		500 Internal Server Error.
	-->
	<!-- TODO: Make status pages ".html"? (n, test) -->
	<error-page>
		<error-code>401</error-code>
		<location>/401.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/404.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/500.jsp</location>
	</error-page>
	
	<!-- Error page can be specified for any type of java exception. -->
	<!--
	<error-page>
		<exception-type>java.lang.ArrayIndexOutOfBoundsException</exception-type>
		<location>/arrayExceptionPage.jsp</location>
	</error-page>
	<error-page>
		<exception-type>java.lang.Exception</exception-type>
		<location>/error.jsp</location>
	</error-page>
	-->
</web-app>